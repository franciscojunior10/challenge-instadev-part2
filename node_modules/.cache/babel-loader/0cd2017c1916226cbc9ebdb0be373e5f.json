{"ast":null,"code":"var _jsxFileName = \"/home/junior/codenation/react-16/src/components/Story/Story.jsx\";\nimport React, { useCallback, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport './Story.scss';\n\nconst Story = ({\n  story,\n  user,\n  handleClose\n}) => {\n  const [duration, setDuration] = useState([]);\n  const [currentTime, setCurrentTime] = useState([]);\n  const updateProgress = useCallback(() => {\n    if (duration !== null && currentTime !== null) {\n      const elapsedTime = currentTime / duration * 100;\n      return `${elapsedTime.toFixed(2)}%`;\n    }\n\n    return '0%';\n  }, [duration, currentTime]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"story\",\n    \"data-testid\": \"story\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"story__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/userser/${user.username}`,\n    className: \"user__thumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar,\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/userser/${user.username}`,\n    className: \"user__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, user.name)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"story__close\",\n    onClick: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story__progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: updateProgress()\n    },\n    className: \"story__progress__elapsed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))), story.videoUrl && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"story__video__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    className: \"video-player\",\n    loop: true,\n    playsInline: true,\n    onLoadedMetadata: e => setDuration(e.target.duration),\n    src: story.videoUrl,\n    onTimeUpdate: e => setCurrentTime(e.target.currentTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Story;","map":{"version":3,"sources":["/home/junior/codenation/react-16/src/components/Story/Story.jsx"],"names":["React","useCallback","useState","Link","Story","story","user","handleClose","duration","setDuration","currentTime","setCurrentTime","updateProgress","elapsedTime","toFixed","username","avatar","name","width","videoUrl","e","target"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\n\nimport { Link } from 'react-router-dom';\n\nimport './Story.scss';\n\nconst Story = ({ story, user, handleClose }) => {\n  const [duration, setDuration] = useState([]);\n  const [currentTime, setCurrentTime] = useState([])\n\n  const updateProgress = useCallback(\n    () => {\n    if (duration !== null  && currentTime !== null) {\n      const elapsedTime = ((currentTime / duration) * 100);\n\n      return `${elapsedTime.toFixed(2)}%`;\n    }\n\n    return '0%';\n  }, [duration, currentTime]);\n\n  return (\n    <section className=\"story\" data-testid=\"story\">\n      <div className=\"container\">\n        <header className=\"story__header\">\n          <div className=\"user\">\n            <Link to={`/userser/${user.username}`} className=\"user__thumb\">\n              <img src={user.avatar} alt={user.name}/>\n            </Link>\n            <Link to={`/userser/${user.username}`} className=\"user__name\">\n              {user.name}\n            </Link>\n          </div>\n          <button className=\"story__close\" onClick={()=>handleClose()}>\n          <i className=\"fas fa-times\"></i>\n          </button>\n        </header>\n        <div className=\"story__progress\">\n          <div\n              style={{ width: updateProgress()}}\n              className=\"story__progress__elapsed\"\n            />\n          </div>\n      </div>\n      {story.videoUrl &&\n      (<div className=\"container\">\n        <section className=\"story__video__wrapper\">\n        <video\n         autoPlay\n         className=\"video-player\"\n         loop\n          playsInline\n          onLoadedMetadata={e => setDuration(e.target.duration)}\n          src={story.videoUrl} onTimeUpdate={e => setCurrentTime(e.target.currentTime)}></video>\n        </section>\n      </div>)\n      }\n    </section>\n  );\n};\n\nexport default Story;\n"]},"metadata":{},"sourceType":"module"}