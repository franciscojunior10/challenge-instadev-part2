{"ast":null,"code":"var _jsxFileName = \"/home/junior/codenation/react-16/src/routes/FeedRoute/FeedRoute.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Stories from '../../containers/Stories';\nimport Loading from '../../components/Loading';\nimport Posts from '../../containers/Posts';\nimport { get } from '../../utils/featchAPI';\nimport './FeedRoute.scss';\n\nconst FeedRoute = () => {\n  const [users, setUsers] = useState([]);\n  const [stories, setStories] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [indexUserFeatched, setIndexUserFeatched] = useState(0);\n\n  const getUserPostById = postUserId => users.find(user => postUserId === user.id);\n\n  useEffect(() => {\n    get('https://5e7d0266a917d70016684219.mockapi.io/api/v1/users').then(data => setUsers(data));\n  }, []);\n  useEffect(() => {\n    get('https://5e7d0266a917d70016684219.mockapi.io/api/v1/stories').then(data => setStories(data));\n  }, [users]);\n  useEffect(() => {\n    if (indexUserFeatched < users.length) {\n      get(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${users[indexUserFeatched].id}/posts`).then(data => {\n        setPosts([...posts, ...data]);\n        setIndexUserFeatched(indexUserFeatched + 1);\n      });\n    }\n  }, [users, indexUserFeatched, posts]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"feed-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, users.length > 0 && stories.length > 0 && /*#__PURE__*/React.createElement(Stories, {\n    stories: stories,\n    getUserHandler: getUserPostById,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), posts.length !== 0 ? /*#__PURE__*/React.createElement(Posts, {\n    posts: posts,\n    getUserHandler: getUserPostById,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FeedRoute;","map":{"version":3,"sources":["/home/junior/codenation/react-16/src/routes/FeedRoute/FeedRoute.jsx"],"names":["React","useState","useEffect","Stories","Loading","Posts","get","FeedRoute","users","setUsers","stories","setStories","posts","setPosts","indexUserFeatched","setIndexUserFeatched","getUserPostById","postUserId","find","user","id","then","data","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,SAAQC,GAAR,QAAkB,uBAAlB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEtB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,CAAD,CAA1D;;AAEA,QAAMe,eAAe,GAAIC,UAAD,IAAgBT,KAAK,CAACU,IAAN,CAAWC,IAAI,IAAIF,UAAU,KAAKE,IAAI,CAACC,EAAvC,CAAxC;;AAEAlB,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,GAAG,CAAC,0DAAD,CAAH,CACCe,IADD,CACMC,IAAI,IAAIb,QAAQ,CAACa,IAAD,CADtB;AAED,GAHQ,EAGP,EAHO,CAAT;AAKApB,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,GAAG,CAAC,4DAAD,CAAH,CACCe,IADD,CACMC,IAAI,IAAIX,UAAU,CAACW,IAAD,CADxB;AAED,GAHQ,EAGP,CAACd,KAAD,CAHO,CAAT;AAKAN,EAAAA,SAAS,CAAE,MAAM;AACf,QAAGY,iBAAiB,GAAGN,KAAK,CAACe,MAA7B,EAAoC;AAClCjB,MAAAA,GAAG,CAAE,4DAA2DE,KAAK,CAACM,iBAAD,CAAL,CAAyBM,EAAG,QAAzF,CAAH,CACCC,IADD,CACMC,IAAI,IAAI;AACVT,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGU,IAAd,CAAD,CAAR;AACAP,QAAAA,oBAAoB,CAACD,iBAAiB,GAAC,CAAnB,CAApB;AACH,OAJD;AAKD;AACF,GARQ,EAQP,CAACN,KAAD,EAAQM,iBAAR,EAA2BF,KAA3B,CARO,CAAT;AAUA,sBACE;AAAK,mBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,KAAK,CAACe,MAAN,GAAe,CAAf,IAAoBb,OAAO,CAACa,MAAR,GAAiB,CADtC,iBAEC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEb,OAAlB;AAA2B,IAAA,cAAc,EAAEM,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAMGJ,KAAK,CAACW,MAAN,KAAiB,CAAjB,gBACD,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEX,KAAd;AAAqB,IAAA,cAAc,EAAEI,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,gBAED,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CAzCD;;AA2CA,eAAeT,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Stories from '../../containers/Stories';\nimport Loading from '../../components/Loading';\n\nimport Posts from '../../containers/Posts';\n\nimport {get} from '../../utils/featchAPI'\n\nimport './FeedRoute.scss';\n\nconst FeedRoute = () => {\n\n  const [users,setUsers] = useState([])\n  const [stories, setStories] = useState([])\n  const [posts, setPosts] = useState([])\n  const [indexUserFeatched, setIndexUserFeatched] = useState(0)\n\n  const getUserPostById = (postUserId) => users.find(user => postUserId === user.id)\n  \n  useEffect(()=>{\n    get('https://5e7d0266a917d70016684219.mockapi.io/api/v1/users')\n    .then(data => setUsers(data))\n  },[])\n\n  useEffect(()=>{\n    get('https://5e7d0266a917d70016684219.mockapi.io/api/v1/stories')\n    .then(data => setStories(data))\n  },[users])\n\n  useEffect( () => {\n    if(indexUserFeatched < users.length){\n      get(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${users[indexUserFeatched].id}/posts`)\n      .then(data => {\n          setPosts([...posts, ...data])\n          setIndexUserFeatched(indexUserFeatched+1)\n      })\n    }\n  },[users, indexUserFeatched, posts])\n  \n  return (\n    <div data-testid=\"feed-route\">\n      {(\n        users.length > 0 && stories.length > 0) && (\n        <Stories stories={stories} getUserHandler={getUserPostById} />\n      )}\n      {\n       posts.length !== 0 ?\n      <Posts posts={posts} getUserHandler={getUserPostById}/> :\n      <Loading />}\n    </div>\n  )\n}\n\nexport default FeedRoute;"]},"metadata":{},"sourceType":"module"}